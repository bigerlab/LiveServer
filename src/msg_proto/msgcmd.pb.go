// Code generated by protoc-gen-go.
// source: msgcmd.proto
// DO NOT EDIT!

package msg_proto

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type MsgCmd int32

const (
	MsgCmd_None        MsgCmd = 0
	MsgCmd_CmdResult_S MsgCmd = 1
	// 登录
	MsgCmd_RequestLogin_C MsgCmd = 2
	MsgCmd_LoginToken_S   MsgCmd = 3
)

var MsgCmd_name = map[int32]string{
	0: "None",
	1: "CmdResult_S",
	2: "RequestLogin_C",
	3: "LoginToken_S",
}
var MsgCmd_value = map[string]int32{
	"None":           0,
	"CmdResult_S":    1,
	"RequestLogin_C": 2,
	"LoginToken_S":   3,
}

func (x MsgCmd) Enum() *MsgCmd {
	p := new(MsgCmd)
	*p = x
	return p
}
func (x MsgCmd) String() string {
	return proto.EnumName(MsgCmd_name, int32(x))
}
func (x MsgCmd) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *MsgCmd) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MsgCmd_value, data, "MsgCmd")
	if err != nil {
		return err
	}
	*x = MsgCmd(value)
	return nil
}

func init() {
	proto.RegisterEnum("msg_proto.MsgCmd", MsgCmd_name, MsgCmd_value)
}
