// Code generated by protoc-gen-go.
// source: error.proto
// DO NOT EDIT!

package msg_proto

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Error int32

const (
	Error_Init_None Error = -1
	Error_Sucess    Error = 0
	// 登录
	Error_UnKnow_User       Error = 1
	Error_Mismatch_Password Error = 2
)

var Error_name = map[int32]string{
	-1: "Init_None",
	0:  "Sucess",
	1:  "UnKnow_User",
	2:  "Mismatch_Password",
}
var Error_value = map[string]int32{
	"Init_None":         -1,
	"Sucess":            0,
	"UnKnow_User":       1,
	"Mismatch_Password": 2,
}

func (x Error) Enum() *Error {
	p := new(Error)
	*p = x
	return p
}
func (x Error) String() string {
	return proto.EnumName(Error_name, int32(x))
}
func (x Error) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Error) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Error_value, data, "Error")
	if err != nil {
		return err
	}
	*x = Error(value)
	return nil
}

func init() {
	proto.RegisterEnum("msg_proto.Error", Error_name, Error_value)
}
